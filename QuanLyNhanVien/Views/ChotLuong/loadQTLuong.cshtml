@{
    QuanLyNhanVienContext context = new QuanLyNhanVienContext();
    LuongCoBan getQTL(int? id, DateTime? ngay)
    {
        LuongCoBan nv = context.LuongCoBan.FirstOrDefault(x => x.MaNs == id && x.ThoiGian == ngay);
        if (nv != null) return nv;
        else return new LuongCoBan();
    }
    string formatDay(DateTime? date)
    {
        if (date != null)
        {
            return date.Value.ToString("dd/MM/yyyy");
        }
        else
        {
            return null;
        }
    }
    double CalculateTotalCongNS(int? id, DateTime? ngay)
    {
       double totalCongNS = 0;
        if (id.HasValue && ngay.HasValue)
        {
            totalCongNS = context.ChamCong
                .Where(x => x.MaNs == id && 
                            x.Ngay.HasValue && 
                            x.Ngay.Value.Month == ngay.Value.Month && 
                            x.Ngay.Value.Year == ngay.Value.Year && 
                            x.Thu != "0" && 
                            x.SoCong.HasValue) // Kiểm tra SoCong có giá trị hay không
                .Sum(x => x.SoCong.Value); // Tính tổng giá trị SoCong
        }
        return totalCongNS;
    }
        double CalculateTotalCongNG(int? id, DateTime? ngay)
    {
       double totalCongNG = 0;
        if (id.HasValue && ngay.HasValue)
        {
            totalCongNG = context.ChamCong
                .Where(x => x.MaNs == id && 
                            x.Ngay.HasValue && 
                            x.Ngay.Value.Month == ngay.Value.Month && 
                            x.Ngay.Value.Year == ngay.Value.Year && 
                            x.Thu == "0" && 
                            x.SoCong.HasValue) // Kiểm tra SoCong có giá trị hay không
                .Sum(x => x.SoCong.Value); // Tính tổng giá trị SoCong
        }
        return totalCongNG;
    }
            double CalculateTotalGioTC(int? id, DateTime? ngay)
    {
       double totalGioTC = 0;
        if (id.HasValue && ngay.HasValue)
        {
            totalGioTC = context.ChamCong
                .Where(x => x.MaNs == id && 
                            x.Ngay.HasValue && 
                            x.Ngay.Value.Month == ngay.Value.Month && 
                            x.Ngay.Value.Year == ngay.Value.Year && 
                            x.SoGio.HasValue) // Kiểm tra SoCong có giá trị hay không
                .Sum(x => x.SoGio.Value); // Tính tổng giá trị SoCong
        }
        return totalGioTC;
    }
    string format(Decimal? a)
    {
        return a?.ToString("N0", System.Globalization.CultureInfo.InvariantCulture);
    }
    string format1(double? a)
    {
        return a?.ToString("N0", System.Globalization.CultureInfo.InvariantCulture);
    }
}
<div id="tbodyQTLuong">
    <table id="example"
           class="table table-bordered table-responsive"
           width="100%">
        <thead>
            <tr>
                <th class="text-center">Mã NS</th>
                <th class="text-center">Tên NS</th>
                <th class="text-center">Ngày sinh</th>
                <th class="text-center">Giới tính</th>
                <th class="text-center">Hệ số lương</th>
                <th class="text-center">Mức lương cơ bản</th>
                <th class="text-center">Tổng công</th>
                <th class="text-center">Tổng ngày tăng ca</th>
                <th class="text-center">Tổng giờ tăng ca</th>
                <th class="text-center">Thực nhận</th>
            </tr>
        </thead>
        <tbody>
            @foreach (QuaTrinhLuong item in ViewBag.QTL)
            {
                double tongcong = CalculateTotalCongNS(item.MaNs, ViewBag.Ngay);
                double tongluong = ((double)item.MaHslNavigation.HeSoLuong * (double)item.MaMlNavigation.TienLuong);
                double congngoaigio = CalculateTotalCongNG(item.MaNs, ViewBag.Ngay);
                double giotangca = CalculateTotalGioTC(item.MaNs, ViewBag.Ngay);
                double luongngay = (tongluong / 26);
                double luonggio = (luongngay / 8);
                double thucnhan = (luongngay * congngoaigio * (double)item.MaHslNavigation.HeSoTangCa) + (luongngay * tongcong) + (luonggio * giotangca * (double)item.MaHslNavigation.HeSoTangCa);
                <tr>
                    <td class="text-center">@item.MaNsNavigation.MaNs</td>
                    <td class="text-left">@item.MaNsNavigation.TenNs</td>
                    <td class="text-center">@formatDay(item.MaNsNavigation.NgaySinh)</td>
                    <td class="text-center">@(item.MaNsNavigation.GioiTinh ?? false ? "Nam" : "Nữ")</td>
                    <td class="text-center">@item.MaHslNavigation.HeSoLuong</td>
                    <td class="text-right">@format(item.MaMlNavigation.TienLuong)</td>
                    <td class="text-right">@tongcong</td>
                    <td class="text-right">@congngoaigio</td>
                    <td class="text-right">@giotangca</td>
                    <td class="text-right">
                       @format1(thucnhan)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script>
    $(document).ready(function () {
        $.fn.DataTable.ext.pager.numbers_length = 3;
        $('#example').DataTable().destroy();
        $("#example").dataTable({
            scrollCollapse: true,
            bLengthChange: false,
            bInfo: false,
            scrollX: true,
            fixedHeader: true,
            language: {
                paginate: {
                    previous: "<<",
                    next: ">>",
                },
                search: "Tìm kiếm",
            },
        });
    });
</script>