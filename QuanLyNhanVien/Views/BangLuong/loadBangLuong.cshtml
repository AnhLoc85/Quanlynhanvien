@using Microsoft.EntityFrameworkCore
@{
    QuanLyNhanVienContext context = new QuanLyNhanVienContext();
    LuongCoBan getQTL(int? id, DateTime? ngay)
    {
        LuongCoBan nv = context.LuongCoBan.FirstOrDefault(x => x.MaNs == id && x.ThoiGian == ngay);
        if (nv != null) return nv;
        else return new LuongCoBan();
    }
    QuaTrinhThuongPc getQTT(int? id, DateTime? ngay)
    {
        QuaTrinhThuongPc t = context.QuaTrinhThuongPc.FirstOrDefault(x => x.MaNs == id && x.Tgthuong == ngay);
        if (t != null) return t;
        else return new QuaTrinhThuongPc();
    }
    double CalculateTotalThuongNS(int? id, DateTime? ngay)
    {
        double totalThuongNS = 0.0;
        if (id.HasValue && ngay.HasValue)
        {
            totalThuongNS = (double)context.QuaTrinhThuongPc
            .Where(x => x.MaNs == id && x.Tgthuong.HasValue && x.Tgthuong.Value.Month == ngay.Value.Month && x.Tgthuong.Value.Year
            == ngay.Value.Year)
            .Sum(x => x.TienThuong);
        }
        return totalThuongNS;
    }

    double CalculateTotalPhuCapNS(int? id, DateTime? ngay)
    {
        double totalPhuCapNS = (double)context.PhuCapNhanSu
        .Where(x => x.MaNs == id && x.ThoiGian == ngay)
        .Sum(x => x.TienPc);
        return totalPhuCapNS;
    }

    double CalculateTotalPhatNS(int? id, DateTime? ngay)
    {
        double totalPhatNS = 0.0;

        if (id.HasValue && ngay.HasValue)
        {
            totalPhatNS = (double)context.QuaTrinhPhat
            .Where(x => x.MaNs == id && x.Tgphat.HasValue && x.Tgphat.Value.Month == ngay.Value.Month && x.Tgphat.Value.Year ==
            ngay.Value.Year)
            .Sum(x => x.TienPhat);
        }

        return totalPhatNS;
    }
    double CalculateThuongTinhBH(int? id, DateTime? ngay)
    {
        double totalThuongTinhBH = 0.0;

        if (id.HasValue && ngay.HasValue)
        {
            totalThuongTinhBH = (double)context.QuaTrinhThuongPc.Include(x => x.MaThuongNavigation)
            .Where(x => x.MaNs == id && x.Tgthuong.HasValue && x.Tgthuong.Value.Month == ngay.Value.Month
            && x.Tgthuong.Value.Year == ngay.Value.Year && x.MaThuongNavigation.Bhxh == true)
            .Sum(x => x.TienThuong);
        }

        return totalThuongTinhBH;
    }
    double CalculateTotalPhuCapTinhBH(int? id, DateTime? ngay, double luongNS)
    {
        double phuCapBH = 0;
        var PhuCapTinhBH = context.QuaTrinhPhuCap
        .Include(x => x.MaHspcNavigation)
        .Include(x => x.MaPcNavigation)
        .Where(x => x.MaNs == id &&
        x.TgbatDau <= ngay && ngay <= x.TgketThuc &&
        x.MaPcNavigation.Bhxh == true).ToList();
        foreach (QuaTrinhPhuCap quaTrinh in PhuCapTinhBH)
        {
            phuCapBH += (double)((quaTrinh.MaHspcNavigation.HeSoPhuCap * luongNS) / 100);
        }
        return Math.Round(phuCapBH, 3);
    }
    double CalculateThuongTinhThue(int? id, DateTime? ngay)
    {
        double totalThuongTinhThue = 0.0;

        if (id.HasValue && ngay.HasValue)
        {
            totalThuongTinhThue = (double)context.QuaTrinhThuongPc.Include(x => x.MaThuongNavigation)
            .Where(x => x.MaNs == id && x.Tgthuong.HasValue && x.Tgthuong.Value.Month == ngay.Value.Month
            && x.Tgthuong.Value.Year == ngay.Value.Year && x.MaThuongNavigation.Tncn == true)
            .Sum(x => x.TienThuong);
        }

        return totalThuongTinhThue;
    }
    double CalculateTotalPhuCapTinhThue(int? id, DateTime? ngay, double luongNS)
    {
        double phuCapThue = 0;
        var PhuCapTinhThue = context.QuaTrinhPhuCap
        .Include(x => x.MaHspcNavigation)
        .Include(x => x.MaPcNavigation)
        .Where(x => x.MaNs == id &&
        x.TgbatDau <= ngay && ngay <= x.TgketThuc &&
        x.MaPcNavigation.Tncn == true).ToList();
        foreach (QuaTrinhPhuCap quaTrinh in PhuCapTinhThue)
        {
            phuCapThue += (double)((quaTrinh.MaHspcNavigation.HeSoPhuCap * luongNS) / 100);
        }
        return Math.Round(phuCapThue, 3);
    }
    var cachtinhthue = context.QuyDinhThue.ToList();

    string format1(decimal? a)
    {
        return a?.ToString("N0", System.Globalization.CultureInfo.InvariantCulture);
    }
    string format(double? a)
    {
        return a?.ToString("N0", System.Globalization.CultureInfo.InvariantCulture);
    }
}

<div id="tbodyBangLuong">

    <table id="example" class="table table-bordered table-responsive" width="100%">
        <thead>
            <tr>

                <th class="text-center">STT</th>
                <th class="text-center">Mã NS</th>
                <th class="text-center">Tên NS</th>
                <th class="text-center">Lương cơ bản</th>
                <th class="text-center">Phụ cấp theo % lương</th>
                <th class="text-center">Thưởng, phụ cấp khác</th>
                <th class="text-center">Tổng lương</th>
                <th class="text-center">Thuế</th>
                <th class="text-center">Bảo hiểm</th>
                <th class="text-center">khoản phạt, trừ lương</th>
                <th class="text-center">Thực nhận</th>
            </tr>
        </thead>

        <tbody id="tbodyBangLuong">
            @{
                int Sttw = 0;
            }
            @foreach (NhanSu item in ViewBag.NS)
            {
                double totalPhuCapNS = CalculateTotalPhuCapNS(item.Id, ViewBag.Ngay);
                double totalThuongNS = CalculateTotalThuongNS(item.Id, ViewBag.Ngay);
                double totalPhatNS = CalculateTotalPhatNS(item.Id, ViewBag.Ngay);
                double tongluong = ((double)getQTL(item.Id, ViewBag.Ngay).LuongNs + totalPhuCapNS + totalThuongNS);
                double pctinhbh = CalculateTotalPhuCapTinhBH(item.Id, ViewBag.Ngay, (double)getQTL(item.Id,
                ViewBag.Ngay).LuongNs);
                double thuongtinhbh = CalculateThuongTinhBH(item.Id, ViewBag.Ngay);
                double baohiem = ((double)getQTL(item.Id, ViewBag.Ngay).LuongNs + pctinhbh + thuongtinhbh) * 10.5 / 100;
                double pctinhthue = CalculateTotalPhuCapTinhThue(item.Id, ViewBag.Ngay, (double)getQTL(item.Id,
                ViewBag.Ngay).LuongNs);
                double thuongtinhthue = CalculateThuongTinhThue(item.Id, ViewBag.Ngay);
                double thunhaptinhthue = ((double)getQTL(item.Id, ViewBag.Ngay).LuongNs + pctinhthue + thuongtinhthue -
                baohiem - 11000000);
                double thue = 0;
                if (thunhaptinhthue >0)
                {
                    foreach (QuyDinhThue thuNhapThue in cachtinhthue)
                    {
                        if (thunhaptinhthue <= thuNhapThue.Thunhapthue)
                        {
                            thue = thunhaptinhthue * ((double)thuNhapThue.Thuesuat / 100);
                            break;
                        }
                        else
                        {
                            thue = thunhaptinhthue * ((double)cachtinhthue.Max(x => x.Thuesuat) / 100);
                        }
                    }
                }
                <tr>
                    @{
                        Sttw++;
                    }
                    <td class="text-center px-1 py-2">@Sttw</td>
                    <td class="text-center px-1 py-2">@item.MaNs</td>
                    <td class="text-start px-1 py-2">@item.TenNs</td>
                    <td class="text-end px-1 py-2">@format1(getQTL(item.Id, ViewBag.Ngay).LuongNs)</td>
                    <td class="text-end px-1 py-2">@format(totalPhuCapNS)</td>
                    <td class="text-end px-1 py-2">@format(totalThuongNS)</td>
                    <td class="text-end px-1 py-2"> @format(tongluong)</td>
                    <td class="text-end px-1 py-2">@format(thue)</td>
                    <td class="text-end px-1 py-2">@format(baohiem)
                    </td>
                    <td class="text-end px-1 py-2">@format(totalPhatNS)</td>
                    <td class="text-end px-1 py-2">@format(tongluong - thue - baohiem - totalPhatNS)</td>
                </tr>

            }
        </tbody>
    </table>
</div>
<script>
    $(document).ready(function () {
        $.fn.DataTable.ext.pager.numbers_length = 3;
        $('#example').DataTable().destroy();
        $("#example").dataTable({
            scrollCollapse: true,
            bLengthChange: false,
            bInfo: false,
            scrollX: true,
            fixedHeader: true,
            language: {
                paginate: {
                    previous: "<<",
                    next: ">>",
                },
                search: "Tìm kiếm",
            },
        });
    });
</script>