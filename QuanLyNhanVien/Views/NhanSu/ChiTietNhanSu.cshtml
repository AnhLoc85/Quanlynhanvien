@model QuanLyNhanVien.Models.NhanSu
@{

}

<div class="container-xxl flex-grow-1 container-p-y">

    <div class="row">
        <div class="col-md-12">
            <div class="card mb-4">
                <h5 class="card-header">Thông tin cá nhân</h5>
                <!-- Account -->
                <div class="card-body">
                    <div class="d-flex align-items-start align-items-sm-center gap-4">
                        <img src="@Model.HinhAnh"
                             alt="user-avatar"
                             class="d-block rounded"
                             height="100"
                             width="100"
                             id="uploadedAvatar" />
                    </div>
                </div>
                <hr class="my-0" />
                <div class="card-body">
                    <form id="formAccountSettings"
                          method="POST"
                          onsubmit="return false">
                        <div class="row">
                            <div class="mb-3 col-md-6">
                                <label for="firstName" class="form-label">Họ và tên</label>
                                <input class="form-control"
                                       type="text"
                                       asp-for="@Model.TenNs"
                                       readonly />
                            </div>
                            <div class="mb-3 col-md-6">
                                <label for="lastName" class="form-label">Ngày sinh</label>
                                <input class="form-control"
                                       type="date"
                                       asp-for="@Model.NgaySinh"
                                       readonly />
                            </div>
                            <div class="mb-3 col-md-6">
                                <label for="email" class="form-label">E-mail</label>
                                <input class="form-control"
                                       type="text"
                                      asp-for="@Model.Email"
                                       placeholder="ten@gmail.com"
                                       readonly />
                            </div>
                            <div class="mb-3 col-md-6">
                                <label class="form-label" for="phoneNumber">Số điện thoại</label>
                                <div class="input-group input-group-merge">
                                    <input type="text" 
                                           class="form-control"
                                          asp-for="@Model.Sdt"
                                           readonly />
                                </div>
                            </div>


                           
                            <div class="mb-3">
                                <label for="address" class="form-label">Địa chỉ</label>
                                <input type="text"
                                       class="form-control"
                                       asp-for="@Model.DiaChi"
                                       readonly
                                      />
                            </div>
                            <div class="mb-3 col-md-6">
                                <label for="quequan" class="form-label">Quê quán</label>
                                <input type="text"
                                       class="form-control"
                                       asp-for="@Model.QueQuan"
                                       readonly />
                            </div>
                            <div class="mb-3 col-md-6">
                                <label for="gioitinh" class="form-label">Giới tính</label>
                                <input type="text"
                                       class="form-control"
                                       asp-for="@Model.GioiTinh"
                                       readonly />
                            </div>
                        </div>

                    </form>
                </div>
                <!-- /Account -->
            </div>
        </div>
    </div>
</div>

<script>
    // Lắng nghe sự kiện "change" của input type "file"
    document.getElementById("upload").addEventListener("change", function () {
        // Lấy thông tin ảnh được chọn
        var file = this.files[0];

        // Kiểm tra nếu file là hình ảnh
        if (file && file.type.startsWith("image/")) {
            // Tạo đối tượng FileReader để đọc nội dung của file
            var reader = new FileReader();

            // Xử lý sự kiện "load" của đối tượng FileReader
            reader.addEventListener("load", function () {
                // Cập nhật ảnh hiển thị
                document.getElementById("uploadedAvatar").src = reader.result;
            });

            // Đọc nội dung của file
            reader.readAsDataURL(file);
        }
    });

    var citis = document.getElementById("city");
    var districts = document.getElementById("district");
    var wards = document.getElementById("ward");
    var Parameter = {
        url: "assets/data.json",
        method: "GET",
        responseType: "application/json",
    };
    var promise = axios(Parameter);
    promise.then(function (result) {
        renderCity(result.data);
    });

    function renderCity(data) {
        for (const x of data) {
            citis.options[citis.options.length] = new Option(x.Name, x.Id);
        }
        citis.onchange = function () {
            district.length = 1;
            ward.length = 1;
            if (this.value != "") {
                const result = data.filter((n) => n.Id === this.value);

                for (const k of result[0].Districts) {
                    district.options[district.options.length] = new Option(
                        k.Name,
                        k.Id
                    );
                }
            }
        };
        district.onchange = function () {
            ward.length = 1;
            const dataCity = data.filter((n) => n.Id === citis.value);
            if (this.value != "") {
                const dataWards = dataCity[0].Districts.filter(
                    (n) => n.Id === this.value
                )[0].Wards;

                for (const w of dataWards) {
                    wards.options[wards.options.length] = new Option(w.Name, w.Id);
                }
            }
        };
    }

    var quequan = document.getElementById("quequan");

    var promise = axios(Parameter);
    promise.then(function (result) {
        renderQueQuan(result.data);
    });

    function renderQueQuan(data) {
        for (const x of data) {
            quequan.options[quequan.options.length] = new Option(x.Name, x.Name);
        }
    }
</script>